name: Generate Release Notes

on:
  workflow_dispatch:
    inputs:
      time_period:
        description: 'Time period for release notes'
        required: true
        default: 'last-month'
        type: choice
        options:
          - last-week
          - last-month
          - last-quarter
      slack_notify:
        description: 'Send to Slack'
        required: false
        default: true
        type: boolean
      single_repo:
        description: 'Repository name (e.g. "repo-name") or full path (e.g. "org/repo-name"). Leave empty for all repos.'
        required: false
        type: string
      organization:
        description: 'GitHub organization'
        required: false
        default: 'keboola'
        type: string
      repo_patterns:
        description: 'Repository search patterns (comma separated)'
        required: false
        default: 'component'
        type: string
      since_last_run:
        description: 'Generate from the last run'
        required: false
        default: true
        type: boolean
      use_ai:
        description: 'Use AI to generate descriptions'
        required: false
        default: false
        type: boolean
      only_new_releases:
        description: 'Only process and send new releases that have not been processed before'
        required: false
        default: true
        type: boolean
      release_notes_dir:
        description: 'Directory to store individual release notes'
        required: false
        default: 'release_notes'
        type: string
#  schedule:
#    # Run on the 1st of every month at 8:00 AM UTC
#    - cron: '0 8 1 * *'

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This is needed for pushing to the repo
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Generate release notes
        run: |
          python main.py \
            -t "${{ github.event.inputs.time_period || 'last-month' }}" \
            -o "${{ github.event.inputs.organization || 'keboola' }}" \
            -p "${{ github.event.inputs.repo_patterns || 'component' }}" \
            ${{ github.event.inputs.single_repo != '' && format('-r {0}', github.event.inputs.single_repo) || '' }} \
            ${{ github.event.inputs.since_last_run == true && '--since-last-run' || '' }} \
            ${{ github.event.inputs.slack_notify == true && '--slack-enabled' || '' }} \
            ${{ github.event.inputs.use_ai == true && '--use-ai' || '' }} \
            ${{ github.event.inputs.only_new_releases == true && '--only-new-releases' || '' }} \
            --release-notes-dir "${{ github.event.inputs.release_notes_dir || 'release_notes' }}" \
            -v
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Commit release notes to repository
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add release-notes.md
          
          # Also add any new individual release notes
          git add "${{ github.event.inputs.release_notes_dir || 'release_notes' }}"
          
          git commit -m "Update release notes for ${{ github.event.inputs.time_period }}${{ github.event.inputs.single_repo != '' && format(' [repo: {0}]', github.event.inputs.single_repo) || '' }}"
          git push 